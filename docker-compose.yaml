version: "3.8"

services:
    db:
        image: postgres:13
        container_name: itadb-dev-data
        volumes:
            - itadb-dev-data:/var/lib/postgresql/data
        environment:
            POSTGRES_DB: ${DB_NAME}
            POSTGRES_PASSWORD: ${DB_PASS}
            POSTGRES_USER: ${DB_USER}
        networks:
            - backend

    redis:
        image: redis:6
        container_name: redis-dev-data
        command: redis-server --requirepass $REDIS_PASSWORD --appendonly yes
        networks:
            - backend

    graphql:
        image: postgraphile:dev
        container_name: ita-graphql
        restart: always
        build: 
            context: ./graphql
            dockerfile: Dockerfile.dev
        depends_on:
            - db
            - ita-api
        networks:
            - backend
        ports:
            - 5433:5433
        command: [
            "--connection",
            "${DATABASE_URL}",
            "--port", "5433",
            "--schema",
            "public",
            "--append-plugins",
            "postgraphile-plugin-connection-filter",
            "--watch"
        ]

    rest:
        image: postgrest/postgrest
        ports:
            - "1000:1000"
        networks:
            - backend
        environment:
            PGRST_DB_URI: postgresql://postgres:psql@db:5432/postgres?schema=public
            PGRST_DB_SCHEMA: public
            PGRST_DB_ANON_ROLE: ${DB_USER} #In production this role should not be the same as the one used for the connection
            PGRST_SERVER_PROXY_URI: "http://127.0.0.1:3000"
        depends_on:
            - db

    swagger:
        image: swaggerapi/swagger-ui
        ports:
            - "8080:8080"
        expose:
            - "8080"
        environment:
            API_URL: http://localhost:3000/
        depends_on:
            - db
            - ita-api
       
    ita-api:
        build:
            context: .
            dockerfile: Dockerfile.dev
        image: ita-api:dev
        container_name: ita-api-dev
        platform: linux/x86_64
        volumes: 
            - /home/node/app/node_modules
            - .:/home/node/app
        ports:
            - ${PORT}:${PORT}
        networks:
            - backend
        depends_on:
            - db
            - redis

volumes:
    itadb-dev-data:
        name: itadb-dev-data

networks:
    backend:
        name: itabe-network-backend
        driver: bridge